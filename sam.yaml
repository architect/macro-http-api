AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Exported by architect/package@1.2.7 on 2020-03-23T19:21:34.123Z
Resources:
  GetIndex:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/8fb89d725dda75d73a5926869e11a5b2
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetIndexEvent:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            PayloadFormatVersion: '1.0'
        ImplicitApi:
          Type: HttpApi
  GetCats:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/49b295ce884db21c4670b146307af872
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetCatsEvent:
          Type: HttpApi
          Properties:
            Path: /cats
            Method: GET
            PayloadFormatVersion: '1.0'
  PostCats:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/960fb17dc5cfbe355f6c78e4128e9857
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        PostCatsEvent:
          Type: HttpApi
          Properties:
            Path: /cats
            Method: POST
            PayloadFormatVersion: '1.0'
  PatchCatsCatID:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/e8a21281d77888c58c83f910036968ec
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        PatchCatsCatIDEvent:
          Type: HttpApi
          Properties:
            Path: /cats/{catID}
            Method: PATCH
            PayloadFormatVersion: '1.0'
  PutCatsCatID:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/772acb4242980bdb88adca9bc4fe2e8f
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        PutCatsCatIDEvent:
          Type: HttpApi
          Properties:
            Path: /cats/{catID}
            Method: PUT
            PayloadFormatVersion: '1.0'
  DeleteCatsCatID:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://test-http-cfn-deployments-b5a15/64814a5e8f3aa5f8934478477f70033a
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: test-http
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        DeleteCatsCatIDEvent:
          Type: HttpApi
          Properties:
            Path: /cats/{catID}
            Method: DELETE
            PayloadFormatVersion: '1.0'
  StaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ArcGlobalPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: arn:aws:logs:*:*:*
      - PolicyName: ArcStaticBucketPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:DeleteObject
            Resource:
            - Fn::Sub:
              - arn:aws:s3:::${bukkit}
              - bukkit:
                  Ref: StaticBucket
            - Fn::Sub:
              - arn:aws:s3:::${bukkit}/*
              - bukkit:
                  Ref: StaticBucket
  StaticBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub:
        - /${AWS::StackName}/static/${key}
        - key: bucket
      Value:
        Ref: StaticBucket
  StaticFingerprintParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub:
        - /${AWS::StackName}/static/${key}
        - key: fingerprint
      Value: 'false'
  ParameterStorePolicy:
    Type: AWS::IAM::Policy
    DependsOn: Role
    Properties:
      PolicyName: ArcParameterStorePolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ssm:GetParametersByPath
          Resource:
            Fn::Sub:
            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}
            - {}
      Roles:
      - Ref: Role
Outputs:
  BucketURL:
    Description: Bucket URL
    Value:
      Fn::Sub:
      - http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com
      - bukkit:
          Ref: StaticBucket
